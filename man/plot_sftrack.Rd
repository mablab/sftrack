% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_tj.R
\name{plot_sftrack}
\alias{plot_sftrack}
\alias{plot.sftrack}
\alias{plot.sftraj}
\title{methods for plot sftrack/sftraj}
\usage{
\method{plot}{sftrack}(x, y, ...)

\method{plot}{sftraj}(x, y, ..., step_mode = FALSE)
}
\arguments{
\item{x}{sftrack/sftraj object}

\item{y}{ignored}

\item{...}{arguments to passed to plot}

\item{step_mode}{TRUE/FALSE, whether to plot in step_mode, See details}
}
\description{
methods for plot sftrack/sftraj

methods for plot sftrack/sftraj
}
\details{
step mode refers to considering the trajectory as individual 'steps', in the case of plot this means it will
plot each line & point individually. This approach is much slower to plot when n(steps)>10,000.
The alternative method is to merge the steps into a multilinestring of continuous lines. This is much faster to plot.
}
\examples{
library(sftrack)
data("raccoon")
raccoon$timestamp <- as.POSIXct(raccoon$timestamp, "EST")
burstz <- c(id = "animal_id")
my_sftrack <- as_sftrack(raccoon,
  time = "timestamp",
  coords = c("longitude", "latitude"),
  burst = burstz
)

# Plotting with sftrack is just like sf. `...` will accept most arguments as plot.sf

plot(my_sftrack, axes = TRUE, lwd = 5, cex = 5, bgc = "gray80")

# sftraj will as well for the most part, however as its a more
# complex structure to speed up plotting.
my_sftraj <- as_sftraj(raccoon,
  time = "timestamp",
  coords = c("longitude", "latitude"),
  burst = burstz
)
plot(my_sftraj, axes = TRUE, lwd = 5, cex = 5, bgc = "gray80", graticule = TRUE)
}
